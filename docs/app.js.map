{"version":3,"sources":["app/app.js","app/index.js","app/initialize.js"],"names":["NewMsg","view","attrs","msg","model","user","id","onclick","current","from","time","fromNow","Hamburger","toggleNav","m","trust","Nav","name","route","set","Header","open","Body","msgs","map","idx","key","Footer","newMsg","state","onkeyup","e","target","value","placeholder","ctx","chat","publish","channel","message","JSON","stringify","disabled","length","Layout","children","Chat","Login","onsubmit","preventDefault","routes","render","onmatch","root","document","body","pubnub","PubNub","publishKey","subscribeKey","subscribe","channels","addListener","push","parse","redraw","addEventListener","require"],"mappings":"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","file":"docs/app.js","sourcesContent":["import m from \"mithril\"\nimport Stream from \"mithril-stream\"\nimport MT from \"moment\"\n\nconst NewMsg = {\n  view: ({ attrs: { msg, model } }) =>\n    m(\n      `.new-msg ${model.user.id() == msg.id ? \"mine\" : \"friend\"}`,\n      {\n        onclick: () => (model.current = msg)\n      },\n      [\n        m(\".msg-top\", [\n          m(\".from\", msg.from),\n          m(\".time\", MT(msg.time).fromNow())\n        ]),\n        m(\".msg-bottom\", m(\"code.content\", msg.msg))\n      ]\n    )\n}\n\nconst Hamburger = {\n  view: ({ attrs: { model } }) =>\n    m(\n      \"button.hamburger.btn\",\n      {\n        onclick: () => model.toggleNav(!model.toggleNav())\n      },\n      model.toggleNav() ? \"X\" : m.trust(`&#9776`)\n    )\n}\n\nconst Nav = {\n  view: ({ attrs: { model } }) =>\n    m(\".nav\", {}, [\n      m(\n        \"code.code\",\n        \"Proof of concept app for chat built in mithril and using pubnub\"\n      ),\n      m(\n        \"button.btn\",\n        {\n          onclick: () => {\n            model.user.name(\"\")\n            m.route.set(\"/login\")\n          }\n        },\n        \"logout\"\n      )\n    ])\n}\n\nconst Header = {\n  open: false,\n  view: ({ attrs: { model } }) => m(\".header\", {}, [m(Hamburger, { model })])\n}\nconst Body = {\n  view: ({ attrs: { model } }) =>\n    m(\n      \".body\",\n      model.msgs.map((msg, idx) => m(NewMsg, { key: idx, msg, model }))\n    )\n}\nconst Footer = {\n  newMsg: Stream(\"\"),\n  view: ({ state, attrs: { model } }) =>\n    m(\"form.footer\", {}, [\n      m(\"textarea.input\", {\n        onkeyup: (e) => state.newMsg(e.target.value),\n        value: state.newMsg(),\n        placeholder: \"Add message here\"\n      }),\n      m(\n        \"button.btn\",\n        {\n          onclick: (e) => {\n            let ctx = {\n              id: model.user.id(),\n              from: model.user.name(),\n              msg: state.newMsg(),\n              time: MT()\n            }\n            model.chat.publish({\n              channel: \"mithril-chat\",\n              message: JSON.stringify(ctx)\n            })\n            state.newMsg(\"\")\n          },\n          disabled: state.newMsg().length < 2\n        },\n        \"send\"\n      )\n    ])\n}\n\nconst Layout = {\n  view: ({ children, attrs: { model } }) => [\n    m(Header, { model }),\n    model.toggleNav() && m(Nav, { model }),\n    children\n  ]\n}\n\nconst Chat = {\n  view: ({ attrs: { model } }) =>\n    m(\".chat\", m(Body, { model }), m(Footer, { model }))\n}\n\nconst Login = {\n  view: ({ attrs: { model } }) =>\n    m(\n      \"form.login\",\n      {\n        onsubmit: (e) => {\n          e.preventDefault()\n        }\n      },\n      [\n        m(\"h1.h1\", \"Enter a username to start chatting\"),\n        m(\"input.input\", {\n          onkeyup: (e) => model.user.name(e.target.value),\n          placeholder: \"minimum 2 letters\"\n        }),\n        m(\n          \"button.btn\",\n          {\n            onclick: () => {\n              m.route.set(\"/chat\")\n            },\n            disabled: model.user.name().length < 3\n          },\n          \"login\"\n        )\n      ]\n    )\n}\n\nexport const routes = (model) => ({\n  \"/login\": {\n    render: () => {\n      return m(Login, { model })\n    }\n  },\n  \"/chat\": {\n    onmatch: () => {\n      return model.user.name()\n        ? m(Layout, { model }, m(Chat, { model }))\n        : m.route.set(\"/login\")\n    },\n    render: () => {\n      return m(Layout, { model }, m(Chat, { model }))\n    }\n  }\n})\n","import m from \"mithril\"\nimport Stream from \"mithril-stream\"\nimport { routes } from \"./app.js\"\nimport PubNub from \"pubnub\"\nimport { publishKey, subscribeKey } from \"../settings.js\"\nimport { v1 } from \"uuid\"\nconst root = document.body\n\nvar pubnub = new PubNub({\n  publishKey,\n  subscribeKey\n})\npubnub.subscribe({ channels: [\"mithril-chat\"] })\n\nconst model = {\n  toggleNav: Stream(false),\n  chat: pubnub,\n  user: {\n    name: Stream(\"\"),\n    id: Stream(v1())\n  },\n  msgs: []\n}\n\nmodel.chat.addListener({\n  message: ({ message }) => {\n    model.msgs.push(JSON.parse(message))\n    m.redraw()\n  }\n})\n\nm.route(root, \"/login\", routes(model))\n","document.addEventListener(\"DOMContentLoaded\", () => {\n  require(\"./index.js\")\n})\n"]}